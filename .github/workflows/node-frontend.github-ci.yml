name: Node CI

on:
  push:
    branches:
      - main 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:

  node-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: List files in directory
        run: |
          pwd && ls -l
      
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build

      - name: Prepare artifact directory
        run: mkdir ${{ github.workspace }}/artifacts
      
      - name: Copy build to artifact directory
        run: cp -R ${{ github.workspace }}/build ${{ github.workspace }}/artifacts/build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tdgp-frontend
          path: ${{ github.workspace }}/artifacts

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: node-build
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download frontend file from Node build
        uses: actions/download-artifact@v4
        with:
          name: tdgp-frontend

      - name: List files in context
        run: pwd && ls -l
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Pipeline trigger
        run: |
          curl -X POST \
          --fail \
          -F token=glptt-23b7738196ee1407d9dca1e9915eaf309fbe69c8 \
          -F "ref=main" \
          -F "variables[CONTAINER_NAME]=frontend" \
          -F "variables[CONTAINER_IMAGE]=ghcr.io/app-tdgp/tdgp-frontend:main" \
          https://codigo-externo.petrobras.com.br/api/v4/projects/5363/trigger/pipeline
